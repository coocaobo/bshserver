<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="
       http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd">

	<!-- 配置shiro核心组件 securityManager -->
    <bean id="securityManager" class="org.apache.shiro.web.mgt.DefaultWebSecurityManager">
       <!--  <property name="cacheManager" ref="cacheManager"/> -->
       <!--  <property name="sessionMode" value="native"/> -->
       <!-- 配置realm,以便securityManager通过它获取安全数据 -->
        <property name="realm" ref="myRealm"/>
        <property name="subjectDAO" ref="subjectDAO"/>
    	<property name="sessionManager" ref="sessionManager"/>
    </bean>

  <!-- 禁用掉会话调度器 -->
<bean id="sessionManager" class="org.apache.shiro.session.mgt.DefaultSessionManager">
    <property name="sessionValidationSchedulerEnabled" value="false"/>
</bean>
<!--解决报错，组装默认的subjectDAO-->
<bean id="subjectDAO" class="org.apache.shiro.mgt.DefaultSubjectDAO">
    <property name="sessionStorageEvaluator" ref="sessionStorageEvaluator"/>
</bean>
<bean id="sessionStorageEvaluator" class="org.apache.shiro.mgt.DefaultSessionStorageEvaluator">
    <property name="sessionStorageEnabled" value="false"/>
</bean>

   <!-- 配置realm,自己写一个类实现Realm接口 -->
    <bean id="myRealm" class="com.bsoft.shiro.MyShiroRealm"></bean>
    
     <!-- shiro注解权限 -->      
    <bean id="lifecycleBeanPostProcessor" class="org.apache.shiro.spring.LifecycleBeanPostProcessor"/>
    <bean class="org.springframework.aop.framework.autoproxy.DefaultAdvisorAutoProxyCreator"
          depends-on="lifecycleBeanPostProcessor">
          <property name="proxyTargetClass" value="true" />
     </bean>
    <bean class="org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor">
        <property name="securityManager" ref="securityManager"/>
    </bean>

  	<!-- 配置shiroFilter 要和web.xml中过滤器名称一致 -->
    <bean id="shiroFilter" class="org.apache.shiro.spring.web.ShiroFilterFactoryBean">
        <property name="securityManager" ref="securityManager"/>
        <!-- 没有权限的跳转地址 -->
        <property name="unauthorizedUrl" value="/401"/>
         <!-- 自定义filter配置 -->
        <property name="filters">
            <map>
                <!-- 将自定义 的FormAuthenticationFilter注入shiroFilter中-->
                 <entry key="jwt" value-ref="JWTFilter" />
            </map>
         </property>
        <!-- <property name="filterChainDefinitionMap" ref="filterChainDefinitionMap" /> -->
        <property name="filterChainDefinitions">  
            <value>  
				/login.jsp=anon
				/index.jsp=anon
				/401 = anon
				/SSOValidateServlet=anon
				/login = anon
				/appLogin = anon
				/** = jwt  
            </value>  
        </property> 
    </bean>
    
    <!-- 自定义过滤器 -->
    <bean id="JWTFilter" class="com.bsoft.shiro.JWTFilter"></bean>
    <!-- 配置factory bean -->
    <!-- <bean id="flterChainDefinitionMapFactoryBean" class="com.bsoft.shiro.FlterChainDefinitionMapFactoryBean"></bean> -->
   <!-- 调用factorybean的方法，把返回值当做一个bean -->
    <!-- <bean id="filterChainDefinitionMap" factory-bean="flterChainDefinitionMapFactoryBean" 
    	factory-method="createFilterChainDefinitionMap"></bean> -->

<!-- 相当于调用SecurityUtils.setSecurityManager(securityManager) -->
<bean class="org.springframework.beans.factory.config.MethodInvokingFactoryBean">
    <property name="staticMethod" value="org.apache.shiro.SecurityUtils.setSecurityManager"/>
    <property name="arguments" ref="securityManager"/>
</bean>
</beans>
